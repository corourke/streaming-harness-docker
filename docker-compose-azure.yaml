version: '2.1'

services:
  zoo1:
    image: zookeeper
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_LOG4J_PROP: "INFO,ROLLINGFILE"
    volumes:
      - ${WEBAPP_STORAGE_HOME}/zoo1/data:/data
      - ktestvolume:/datalog

  kafka1:
    image: wurstmeister/kafka
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP}:9092
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL

      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ${WEBAPP_STORAGE_HOME}/kafka1/data:/var/lib/kafka/data
      - ${WEBAPP_STORAGE_HOME}/kafka/logs:/tmp/kafka-logs
      - ${WEBAPP_STORAGE_HOME}/kafka1/logs:/kafka/kafka-logs-kafka1
    depends_on:
      - zoo1
  scan-generator1:
    image: corourke/scan_generator
    hostname: scan_generator1
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka1:9092"
      PRODUCER_INSTANCE: "01"
    depends_on:
      - kafka1
  scan-generator2:
    image: corourke/scan_generator
    hostname: scan_generator2
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka1:9092"
      PRODUCER_INSTANCE: "02"
    depends_on:
      - kafka1

volumes:
  -name: ktestvolume
  storageAccountName: ktestgeneratorstorage1
  storageAccountKey: Yja1cn2o3V+AganU20S03GPCQFpuX2BD0Hgtk7PKsNK3R2awjQrV4wuGMU2kv4wTs9c1NAHiKrDTBKZ/3LXXQA==
